version: '3.8'
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: life_insurance
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: postgres://postgres:root@db:5432/life_insurance
      PORT: 5000
      JWT_SECRET: b873bdff534fce21146e00241a77f8e05788e01047fdd83781e20892df7189c611808a6541cf3daa05fc1a959d0efda8ae8fcb7f2655d0b58516443c216b6b4d
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../backend:/usr/src/app
    command: npm run dev

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ../frontend:/usr/src/app
    command: npm run dev
volumes:
  pgdata: